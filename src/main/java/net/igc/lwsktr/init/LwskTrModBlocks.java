
/*
 *    MCreator note: This file will be REGENERATED on each build.
 */
package net.igc.lwsktr.init;

import net.minecraftforge.registries.RegistryObject;
import net.minecraftforge.registries.ForgeRegistries;
import net.minecraftforge.registries.DeferredRegister;
import net.minecraftforge.fml.event.lifecycle.FMLClientSetupEvent;
import net.minecraftforge.fml.common.Mod;
import net.minecraftforge.eventbus.api.SubscribeEvent;
import net.minecraftforge.api.distmarker.Dist;

import net.minecraft.world.level.block.Block;

import net.igc.lwsktr.block.YellowMetalWallBlock;
import net.igc.lwsktr.block.YellowMetalStairsBlock;
import net.igc.lwsktr.block.YellowMetalSlabBlock;
import net.igc.lwsktr.block.YellowMetalBlock;
import net.igc.lwsktr.block.WhiteMetalWallBlock;
import net.igc.lwsktr.block.WhiteMetalStairsBlock;
import net.igc.lwsktr.block.WhiteMetalSlabBlock;
import net.igc.lwsktr.block.WhiteMetalBlock;
import net.igc.lwsktr.block.VentTubeBlock;
import net.igc.lwsktr.block.VentBlock;
import net.igc.lwsktr.block.SmallReinforcedGlassBlock;
import net.igc.lwsktr.block.RustyVentTubeBlock;
import net.igc.lwsktr.block.RustyVentBlock;
import net.igc.lwsktr.block.ReinforcedStructureLightBlock;
import net.igc.lwsktr.block.ReinforcedStructureBlock;
import net.igc.lwsktr.block.ReinforcedGlassMiddleUpFakeBlock;
import net.igc.lwsktr.block.ReinforcedGlassMiddleUpBlock;
import net.igc.lwsktr.block.ReinforcedGlassMiddleDownBlock;
import net.igc.lwsktr.block.ReinforcedGlassMiddleBlock;
import net.igc.lwsktr.block.ReinforcedGlassCornerTopBlock;
import net.igc.lwsktr.block.ReinforcedGlassCornerMiddleBlock;
import net.igc.lwsktr.block.ReinforcedGlassCornerDownBlock;
import net.igc.lwsktr.block.ReinforcedGlassBigBlock;
import net.igc.lwsktr.block.ReinforcedGateBlockBlock;
import net.igc.lwsktr.block.ReinforcedGateBlock;
import net.igc.lwsktr.block.RedMetalWallBlock;
import net.igc.lwsktr.block.RedMetalStairsBlock;
import net.igc.lwsktr.block.RedMetalSlabBlock;
import net.igc.lwsktr.block.RedMetalBlock;
import net.igc.lwsktr.block.PistolBlockBlock;
import net.igc.lwsktr.block.PistolAmmoBlockBlock;
import net.igc.lwsktr.block.OperationalComputerOnBlock;
import net.igc.lwsktr.block.OperationalComputerOffBlock;
import net.igc.lwsktr.block.IronTubeTopBlock;
import net.igc.lwsktr.block.IronTubeBlock;
import net.igc.lwsktr.block.IronChainBlock;
import net.igc.lwsktr.block.HETGBlock;
import net.igc.lwsktr.block.GreenMetalWallBlock;
import net.igc.lwsktr.block.GreenMetalStairsBlock;
import net.igc.lwsktr.block.GreenMetalSlabBlock;
import net.igc.lwsktr.block.GreenMetalBlock;
import net.igc.lwsktr.block.GrayMetalWallBlock;
import net.igc.lwsktr.block.GrayMetalStairsBlock;
import net.igc.lwsktr.block.GrayMetalSlabBlock;
import net.igc.lwsktr.block.GrayMetalBlock;
import net.igc.lwsktr.block.FloorDStairsBlock;
import net.igc.lwsktr.block.FloorDSlabBlock;
import net.igc.lwsktr.block.FloorDBlock;
import net.igc.lwsktr.block.FloorCSmallBlock;
import net.igc.lwsktr.block.FloorCCornerBlock;
import net.igc.lwsktr.block.FloorCBottomBlock;
import net.igc.lwsktr.block.FloorBSmallBlock;
import net.igc.lwsktr.block.FloorBCornerBlock;
import net.igc.lwsktr.block.FloorBBottomBlock;
import net.igc.lwsktr.block.FloorBBlock;
import net.igc.lwsktr.block.FloorAStairsBlock;
import net.igc.lwsktr.block.FloorASmallBlock;
import net.igc.lwsktr.block.FloorASlabBlock;
import net.igc.lwsktr.block.FloorACornerBlock;
import net.igc.lwsktr.block.FloorABottomBlock;
import net.igc.lwsktr.block.FloorABlock;
import net.igc.lwsktr.block.ExplosiveAssaultRifleBlockBlock;
import net.igc.lwsktr.block.ExplosiveAssaultRifleAmmoBlockBlock;
import net.igc.lwsktr.block.CopperTubeTopBlock;
import net.igc.lwsktr.block.CopperTubeBlock;
import net.igc.lwsktr.block.CeilingLightBlock;
import net.igc.lwsktr.block.BlueMetalWallBlock;
import net.igc.lwsktr.block.BlueMetalStairsBlock;
import net.igc.lwsktr.block.BlueMetalSlabBlock;
import net.igc.lwsktr.block.BlueMetalBlock;
import net.igc.lwsktr.block.BlackMetalWallBlock;
import net.igc.lwsktr.block.BlackMetalStairsBlock;
import net.igc.lwsktr.block.BlackMetalSlabBlock;
import net.igc.lwsktr.block.BlackMetalBlock;
import net.igc.lwsktr.block.BigButtonPowerBlock;
import net.igc.lwsktr.block.BigButtonBlock;
import net.igc.lwsktr.block.AssaultRifleBlockBlock;
import net.igc.lwsktr.block.AssaultRifleAmmoBlockBlock;
import net.igc.lwsktr.LwskTrMod;

public class LwskTrModBlocks {
	public static final DeferredRegister<Block> REGISTRY = DeferredRegister.create(ForgeRegistries.BLOCKS, LwskTrMod.MODID);
	public static final RegistryObject<Block> HETG = REGISTRY.register("hetg", () -> new HETGBlock());
	public static final RegistryObject<Block> PISTOL_AMMO_BLOCK = REGISTRY.register("pistol_ammo_block", () -> new PistolAmmoBlockBlock());
	public static final RegistryObject<Block> ASSAULT_RIFLE_AMMO_BLOCK = REGISTRY.register("assault_rifle_ammo_block", () -> new AssaultRifleAmmoBlockBlock());
	public static final RegistryObject<Block> EXPLOSIVE_ASSAULT_RIFLE_AMMO_BLOCK = REGISTRY.register("explosive_assault_rifle_ammo_block", () -> new ExplosiveAssaultRifleAmmoBlockBlock());
	public static final RegistryObject<Block> PISTOL_BLOCK = REGISTRY.register("pistol_block", () -> new PistolBlockBlock());
	public static final RegistryObject<Block> ASSAULT_RIFLE_BLOCK = REGISTRY.register("assault_rifle_block", () -> new AssaultRifleBlockBlock());
	public static final RegistryObject<Block> EXPLOSIVE_ASSAULT_RIFLE_BLOCK = REGISTRY.register("explosive_assault_rifle_block", () -> new ExplosiveAssaultRifleBlockBlock());
	public static final RegistryObject<Block> FLOOR_A = REGISTRY.register("floor_a", () -> new FloorABlock());
	public static final RegistryObject<Block> FLOOR_A_CORNER = REGISTRY.register("floor_a_corner", () -> new FloorACornerBlock());
	public static final RegistryObject<Block> FLOOR_A_BOTTOM = REGISTRY.register("floor_a_bottom", () -> new FloorABottomBlock());
	public static final RegistryObject<Block> FLOOR_A_SMALL = REGISTRY.register("floor_a_small", () -> new FloorASmallBlock());
	public static final RegistryObject<Block> FLOOR_A_STAIRS = REGISTRY.register("floor_a_stairs", () -> new FloorAStairsBlock());
	public static final RegistryObject<Block> FLOOR_A_SLAB = REGISTRY.register("floor_a_slab", () -> new FloorASlabBlock());
	public static final RegistryObject<Block> FLOOR_B = REGISTRY.register("floor_b", () -> new FloorBBlock());
	public static final RegistryObject<Block> FLOOR_B_CORNER = REGISTRY.register("floor_b_corner", () -> new FloorBCornerBlock());
	public static final RegistryObject<Block> FLOOR_B_BOTTOM = REGISTRY.register("floor_b_bottom", () -> new FloorBBottomBlock());
	public static final RegistryObject<Block> FLOOR_B_SMALL = REGISTRY.register("floor_b_small", () -> new FloorBSmallBlock());
	public static final RegistryObject<Block> FLOOR_C_CORNER = REGISTRY.register("floor_c_corner", () -> new FloorCCornerBlock());
	public static final RegistryObject<Block> FLOOR_C_BOTTOM = REGISTRY.register("floor_c_bottom", () -> new FloorCBottomBlock());
	public static final RegistryObject<Block> FLOOR_C_SMALL = REGISTRY.register("floor_c_small", () -> new FloorCSmallBlock());
	public static final RegistryObject<Block> FLOOR_D = REGISTRY.register("floor_d", () -> new FloorDBlock());
	public static final RegistryObject<Block> FLOOR_D_STAIRS = REGISTRY.register("floor_d_stairs", () -> new FloorDStairsBlock());
	public static final RegistryObject<Block> FLOOR_D_SLAB = REGISTRY.register("floor_d_slab", () -> new FloorDSlabBlock());
	public static final RegistryObject<Block> COPPER_TUBE = REGISTRY.register("copper_tube", () -> new CopperTubeBlock());
	public static final RegistryObject<Block> COPPER_TUBE_TOP = REGISTRY.register("copper_tube_top", () -> new CopperTubeTopBlock());
	public static final RegistryObject<Block> IRON_TUBE = REGISTRY.register("iron_tube", () -> new IronTubeBlock());
	public static final RegistryObject<Block> IRON_TUBE_TOP = REGISTRY.register("iron_tube_top", () -> new IronTubeTopBlock());
	public static final RegistryObject<Block> VENT = REGISTRY.register("vent", () -> new VentBlock());
	public static final RegistryObject<Block> VENT_TUBE = REGISTRY.register("vent_tube", () -> new VentTubeBlock());
	public static final RegistryObject<Block> RUSTY_VENT = REGISTRY.register("rusty_vent", () -> new RustyVentBlock());
	public static final RegistryObject<Block> RUSTY_VENT_TUBE = REGISTRY.register("rusty_vent_tube", () -> new RustyVentTubeBlock());
	public static final RegistryObject<Block> GRAY_METAL = REGISTRY.register("gray_metal", () -> new GrayMetalBlock());
	public static final RegistryObject<Block> GRAY_METAL_STAIRS = REGISTRY.register("gray_metal_stairs", () -> new GrayMetalStairsBlock());
	public static final RegistryObject<Block> GRAY_METAL_SLAB = REGISTRY.register("gray_metal_slab", () -> new GrayMetalSlabBlock());
	public static final RegistryObject<Block> GRAY_METAL_WALL = REGISTRY.register("gray_metal_wall", () -> new GrayMetalWallBlock());
	public static final RegistryObject<Block> BLACK_METAL = REGISTRY.register("black_metal", () -> new BlackMetalBlock());
	public static final RegistryObject<Block> BLACK_METAL_STAIRS = REGISTRY.register("black_metal_stairs", () -> new BlackMetalStairsBlock());
	public static final RegistryObject<Block> BLACK_METAL_SLAB = REGISTRY.register("black_metal_slab", () -> new BlackMetalSlabBlock());
	public static final RegistryObject<Block> BLACK_METAL_WALL = REGISTRY.register("black_metal_wall", () -> new BlackMetalWallBlock());
	public static final RegistryObject<Block> GREEN_METAL = REGISTRY.register("green_metal", () -> new GreenMetalBlock());
	public static final RegistryObject<Block> GREEN_METAL_STAIRS = REGISTRY.register("green_metal_stairs", () -> new GreenMetalStairsBlock());
	public static final RegistryObject<Block> GREEN_METAL_SLAB = REGISTRY.register("green_metal_slab", () -> new GreenMetalSlabBlock());
	public static final RegistryObject<Block> GREEN_METAL_WALL = REGISTRY.register("green_metal_wall", () -> new GreenMetalWallBlock());
	public static final RegistryObject<Block> BLUE_METAL = REGISTRY.register("blue_metal", () -> new BlueMetalBlock());
	public static final RegistryObject<Block> BLUE_METAL_STAIRS = REGISTRY.register("blue_metal_stairs", () -> new BlueMetalStairsBlock());
	public static final RegistryObject<Block> BLUE_METAL_SLAB = REGISTRY.register("blue_metal_slab", () -> new BlueMetalSlabBlock());
	public static final RegistryObject<Block> BLUE_METAL_WALL = REGISTRY.register("blue_metal_wall", () -> new BlueMetalWallBlock());
	public static final RegistryObject<Block> RED_METAL = REGISTRY.register("red_metal", () -> new RedMetalBlock());
	public static final RegistryObject<Block> RED_METAL_STAIRS = REGISTRY.register("red_metal_stairs", () -> new RedMetalStairsBlock());
	public static final RegistryObject<Block> RED_METAL_SLAB = REGISTRY.register("red_metal_slab", () -> new RedMetalSlabBlock());
	public static final RegistryObject<Block> RED_METAL_WALL = REGISTRY.register("red_metal_wall", () -> new RedMetalWallBlock());
	public static final RegistryObject<Block> YELLOW_METAL = REGISTRY.register("yellow_metal", () -> new YellowMetalBlock());
	public static final RegistryObject<Block> YELLOW_METAL_STAIRS = REGISTRY.register("yellow_metal_stairs", () -> new YellowMetalStairsBlock());
	public static final RegistryObject<Block> YELLOW_METAL_SLAB = REGISTRY.register("yellow_metal_slab", () -> new YellowMetalSlabBlock());
	public static final RegistryObject<Block> YELLOW_METAL_WALL = REGISTRY.register("yellow_metal_wall", () -> new YellowMetalWallBlock());
	public static final RegistryObject<Block> REINFORCED_STRUCTURE = REGISTRY.register("reinforced_structure", () -> new ReinforcedStructureBlock());
	public static final RegistryObject<Block> REINFORCED_STRUCTURE_LIGHT = REGISTRY.register("reinforced_structure_light", () -> new ReinforcedStructureLightBlock());
	public static final RegistryObject<Block> REINFORCED_GATE = REGISTRY.register("reinforced_gate", () -> new ReinforcedGateBlock());
	public static final RegistryObject<Block> REINFORCED_GATE_BLOCK = REGISTRY.register("reinforced_gate_block", () -> new ReinforcedGateBlockBlock());
	public static final RegistryObject<Block> SMALL_REINFORCED_GLASS = REGISTRY.register("small_reinforced_glass", () -> new SmallReinforcedGlassBlock());
	public static final RegistryObject<Block> REINFORCED_GLASS_CORNER_TOP = REGISTRY.register("reinforced_glass_corner_top", () -> new ReinforcedGlassCornerTopBlock());
	public static final RegistryObject<Block> REINFORCED_GLASS_CORNER_DOWN = REGISTRY.register("reinforced_glass_corner_down", () -> new ReinforcedGlassCornerDownBlock());
	public static final RegistryObject<Block> REINFORCED_GLASS_CORNER_MIDDLE = REGISTRY.register("reinforced_glass_corner_middle", () -> new ReinforcedGlassCornerMiddleBlock());
	public static final RegistryObject<Block> REINFORCED_GLASS_MIDDLE = REGISTRY.register("reinforced_glass_middle", () -> new ReinforcedGlassMiddleBlock());
	public static final RegistryObject<Block> REINFORCED_GLASS_MIDDLE_UP = REGISTRY.register("reinforced_glass_middle_up", () -> new ReinforcedGlassMiddleUpBlock());
	public static final RegistryObject<Block> REINFORCED_GLASS_MIDDLE_DOWN = REGISTRY.register("reinforced_glass_middle_down", () -> new ReinforcedGlassMiddleDownBlock());
	public static final RegistryObject<Block> REINFORCED_GLASS_MIDDLE_UP_FAKE = REGISTRY.register("reinforced_glass_middle_up_fake", () -> new ReinforcedGlassMiddleUpFakeBlock());
	public static final RegistryObject<Block> REINFORCED_GLASS_BIG = REGISTRY.register("reinforced_glass_big", () -> new ReinforcedGlassBigBlock());
	public static final RegistryObject<Block> IRON_CHAIN = REGISTRY.register("iron_chain", () -> new IronChainBlock());
	public static final RegistryObject<Block> CEILING_LIGHT = REGISTRY.register("ceiling_light", () -> new CeilingLightBlock());
	public static final RegistryObject<Block> OPERATIONAL_COMPUTER_OFF = REGISTRY.register("operational_computer_off", () -> new OperationalComputerOffBlock());
	public static final RegistryObject<Block> OPERATIONAL_COMPUTER_ON = REGISTRY.register("operational_computer_on", () -> new OperationalComputerOnBlock());
	public static final RegistryObject<Block> BIG_BUTTON = REGISTRY.register("big_button", () -> new BigButtonBlock());
	public static final RegistryObject<Block> BIG_BUTTON_POWER = REGISTRY.register("big_button_power", () -> new BigButtonPowerBlock());
	public static final RegistryObject<Block> WHITE_METAL = REGISTRY.register("white_metal", () -> new WhiteMetalBlock());
	public static final RegistryObject<Block> WHITE_METAL_STAIRS = REGISTRY.register("white_metal_stairs", () -> new WhiteMetalStairsBlock());
	public static final RegistryObject<Block> WHITE_METAL_SLAB = REGISTRY.register("white_metal_slab", () -> new WhiteMetalSlabBlock());
	public static final RegistryObject<Block> WHITE_METAL_WALL = REGISTRY.register("white_metal_wall", () -> new WhiteMetalWallBlock());

	@Mod.EventBusSubscriber(bus = Mod.EventBusSubscriber.Bus.MOD, value = Dist.CLIENT)
	public static class ClientSideHandler {
		@SubscribeEvent
		public static void clientSetup(FMLClientSetupEvent event) {
			HETGBlock.registerRenderLayer();
			PistolAmmoBlockBlock.registerRenderLayer();
			AssaultRifleAmmoBlockBlock.registerRenderLayer();
			ExplosiveAssaultRifleAmmoBlockBlock.registerRenderLayer();
			PistolBlockBlock.registerRenderLayer();
			AssaultRifleBlockBlock.registerRenderLayer();
			ExplosiveAssaultRifleBlockBlock.registerRenderLayer();
			FloorDBlock.registerRenderLayer();
			FloorDStairsBlock.registerRenderLayer();
			FloorDSlabBlock.registerRenderLayer();
			CopperTubeBlock.registerRenderLayer();
			CopperTubeTopBlock.registerRenderLayer();
			IronTubeBlock.registerRenderLayer();
			IronTubeTopBlock.registerRenderLayer();
			ReinforcedStructureBlock.registerRenderLayer();
			ReinforcedStructureLightBlock.registerRenderLayer();
			ReinforcedGateBlock.registerRenderLayer();
			SmallReinforcedGlassBlock.registerRenderLayer();
			ReinforcedGlassCornerTopBlock.registerRenderLayer();
			ReinforcedGlassCornerDownBlock.registerRenderLayer();
			ReinforcedGlassCornerMiddleBlock.registerRenderLayer();
			ReinforcedGlassMiddleBlock.registerRenderLayer();
			ReinforcedGlassMiddleUpBlock.registerRenderLayer();
			ReinforcedGlassMiddleDownBlock.registerRenderLayer();
			ReinforcedGlassMiddleUpFakeBlock.registerRenderLayer();
			ReinforcedGlassBigBlock.registerRenderLayer();
			IronChainBlock.registerRenderLayer();
			CeilingLightBlock.registerRenderLayer();
			OperationalComputerOffBlock.registerRenderLayer();
			OperationalComputerOnBlock.registerRenderLayer();
			BigButtonBlock.registerRenderLayer();
			BigButtonPowerBlock.registerRenderLayer();
		}
	}
}
